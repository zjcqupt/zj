<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="  
           http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/aop  
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">
 <!-- 读取配置文件 -->
 <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
 <property name="locations" value="classpath:resources/*.properties"> 
 </property>
 </bean>

<!--注意property命名  -->
 <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 	<property name="username" value="${user}"></property>  
    <property name="password" value="${password}"></property>  
   	<property name="driverClassName" value="${driverclass}"></property>  
    <property name="url" value="${jdbcurl}"></property>  
 </bean>

<!--mybatis配置  注意property命名都是死的--> 
 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
 	<property name="dataSource" ref="dataSource"/>
 	<property name="configLocation"  value="classpath:resources/mybatis-config.xml"/>
    <property name="mapperLocations" value="classpath:com/zj/mapper/*.xml" />	 	
 </bean>
 
 <!-- mapper映射 可以此处一起配置 
 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置。对应起来就可以-->
	<bean id="mapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.zj.DAO" />
	</bean>
	
 <context:component-scan base-package="com.zj.Service" />
 
 <!-- mvc中如果使用自定义的conversionservice和validtor甚至内容管理器都可以在spring中配置，因为mvc配置可以引用 -->
 
 
 </beans>
