<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.0.xsd 
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"> 
      
      <context:component-scan base-package="com.*.controller"></context:component-scan>
      <!-- defaultServlet设置后一定要声明annotation-driven -->  
      
      <mvc:annotation-driven >
      <!-- 整合json,添加新的converter -->
      <mvc:message-converters register-defaults="true">
      
      <bean class="org.springframework.http.converter.StringHttpMessageConverter">
      <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                            <value>application/xml;charset=UTF-8</value>
                        </list>
       </property>
      </bean>
      
       <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
      </mvc:message-converters>    
      
      </mvc:annotation-driven>
      <mvc:default-servlet-handler default-servlet-name="default"/>
      
<!-- 配置内容协商管理器  其实还是内置的-->
<!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header-->
<!--     <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"> -->
<!--      扩展名至mimeType的映射,即 /user.json => application/json -->
<!--      <property name="favorPathExtension" value="true"/> -->
<!--      用于开启 /userinfo/123?format=json 的支持 -->
<!--      <property name="favorParameter" value="true"/> -->
<!--      <property name="parameterName" value="format"/> -->
<!--       是否忽略Accept Header -->
<!--       <property name="ignoreAcceptHeader" value="false"/> -->
<!--      <property name="mediaTypes"> 扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用  -->
<!--             <value> -->
<!--                 json=application/json -->
<!--                 xml=application/xml -->
<!--                 html=text/html -->
<!--             </value> -->
<!--        </property> -->
     <!-- 默认的content type -->
<!--         <property name="defaultContentType" value="text/html"/> -->
<!--      </bean> -->
      
      
 <!-- 配置映射解析器：如何将控制器返回的结果字符串，转换为一个物理的视图文件-->
	<bean id="internalResourceViewResolver" 
  	class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="prefix" value="/WEB-INF/views/"/>
	<property name="suffix" value=".jsp"/>
	</bean>
    

      </beans>